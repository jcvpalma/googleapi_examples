@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_Shared/_Layout.cshtml";
}

<!-- Key: AIzaSyBQJLU3tSx867nl6cZa7kGMooG9mY7lghk -->
<div class="col-lg-12">
    <br />
    <form action="" method="post" class="form-horizontal" enctype="application/x-www-form-urlencoded" id="formulario">
        <div class="col-lg-6">
            <label>Origem</label>
            <input class="form-control" type="text" name="origem" id="origem" value="-22.742667805727457, -47.22386994338382" />
        </div>

        <div class="col-lg-6">
            <label>Destino</label>
            <input type="text" class="form-control" name="destino" id="destino" value="-22.7821, -47.296" />
        </div>

        <div class="col-lg-4">
            <label>Data/Hora</label>
            <input type="text" class="form-control" name="datahora" id="datahora" value="" />
        </div>

        <div class="col-lg-4">
            <br />
            <label>Avoid Highways</label>
            <input id="rdhw" name="rdhw[]" type="radio" checked value="1" /> Verdadeiro
            <input id="rdhw" name="rdhw[]" type="radio" value="0" /> Falso
        </div>

        <div class="col-lg-4">
            <br />
            <label>Avoid Tolls</label>
            <input id="rdtoll" name="rdtoll[]" type="radio" checked value="1" /> Verdadeiro
            <input id="rdtoll" name="rdtoll[]" type="radio" value="0" /> Falso
        </div>

        <div class="col-lg-12">
            <br />
            <button type="button" class="btn btn-default" name="btnAcao" id="btnAcao"><i class="glyphicon glyphicon-save"></i> Consultar</button>
        </div>

    </form>
    
</div>


<div class="col-lg-12">
    <hr />
    <div class="col-lg-4" id="distance">
        <label>Distancia</label> : <span></span>
    </div>
    <div class="col-lg-4" id="time">
        <label>Tempo</label> : <span></span>
    </div>
</div>

<div class="col-lg-12">
    <div id="mapa" style="width:1100px; height:500px;"></div>
</div>


    @section Scripts {

        <script type="text/javascript">
            var _map;
            
            $(document).ready(function () {

                initialize();
                google.maps.event.addDomListener(window, "load", initialize);

                $("#btnAcao").on('click', function () {
                    check_distance();
                });

            });

            function initialize() {

                var avoidHighWays = ($("#rdhw").is(':checked') == true && $("#rdhw:checked").val() == 1) ? true : false;
                var avoidTolls = ($("#rdtoll").is(':checked') == true && $("#rdtoll:checked").val() == 1) ? true : false;

                $("#mapa").html("");
                _map = null;

                var latlng = new google.maps.LatLng(-22.7821, -47.296);
                var myOptions = {
                    zoom: 15,
                    center: latlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: avoidHighWays,
                    avoidTolls: avoidTolls
                };
                _map = new google.maps.Map(document.getElementById("mapa"),
                        myOptions);
                $("#datahora").val(new Date().toString());
            }

            function check_distance() {

                var origin = $("#origem");
                var destin = $("#destino");
                var avoidHighWays = ($("#rdhw").is(':checked') == true && $("#rdhw:checked").val() == 1) ? true : false;
                var avoidTolls = ($("#rdtoll").is(':checked') == true && $("#rdtoll:checked").val() == 1) ? true : false;
                $("#datahora").val(new Date().toString());

                

                if ($(origin).val() == "") {
                    alert("Preencha o campo Origem!");
                    return false;
                }

                if ($(destin).val() == "") {
                    alert("Preencha o campo Destino!");
                    return false;
                }

                var origemA = { lat: -23.7179642, lng: -46.677764300000035 };
                var geocoder = new google.maps.Geocoder;

                //First, get the lat and lng from boths
                var busca = { origem: { lat: 0, lng: 0 }, destino: { lat: 0, lng: 0 } };


                var getLatLngInit = new google.maps.Geocoder;

                getLatLngInit.geocode({ 'address': $(origin).val() }, function (results, sts) {
                    busca.origem.lat = results[0].geometry.location.lat();
                    busca.origem.lng = results[0].geometry.location.lng();
                });

                getLatLngInit.geocode({ 'address': $(destin).val() }, function (results, sts) {
                    busca.destino.lat = results[0].geometry.location.lat();
                    busca.destino.lng = results[0].geometry.location.lng();
                });

                var service = new google.maps.DistanceMatrixService;
                service.getDistanceMatrix({
                    origins: [$(origin).val()],
                    destinations: [$(destin).val()],
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: avoidHighWays,
                    avoidTolls: avoidTolls
                }, function (response, status) {
                    $("#distance > span").html(response.rows[0].elements[0].distance.text);
                    $("#time > span").html(response.rows[0].elements[0].duration.text);

                });
                
                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer;
                directionsDisplay.setMap(_map);
                setMapaStart(_map, directionsService, directionsDisplay);
            }

            function setMapaStart(_map, directionsService, directionsDisplay)
            {
                var origin = $("#origem");
                var destin = $("#destino");
                var avoidHighWays = ($("#rdhw").is(':checked') == true && $("#rdhw:checked").val() == 1) ? true : false;
                var avoidTolls = ($("#rdtoll").is(':checked') == true && $("#rdtoll:checked").val() == 1) ? true : false;
                

                directionsService.route({
                    origin: new google.maps.LatLng($(origin).val().split(",")[0], $(origin).val().split(",")[1]),
                    destination: new google.maps.LatLng($(destin).val().split(",")[0], $(destin).val().split(",")[1]),
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: avoidHighWays,
                    avoidTolls: avoidTolls
                }, function (response, status) {
                    //console.log('Status: ' + status);
                    //console.log('Response:' + JSON.stringify(response));
                    if (status === google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
                
                
            }
        </script>
    }
